@use '../../../styles/design-tokens' as dt;
@use '../../../styles/icons' as *;

/**


 .navigation -- класс родителя

 .navigation-horizontal -- горизонтальный тип

 .navigation-item -- класс для каждого раскрывающегося списка в меню

 .navigation-item-disabled -- ну тут понятно

 .navigation-item-content -- по сути заголовок (иконка, название, стрелка вниз)

 .navigation-item-content-active -- understanding

 .navigation-item-content-without-first-icon -- без первой иконки

 .navigation-item-content-open -- тоже понятно (по умолчанию скрыт)

 .navigation-item-content-label -- тайтл на этом меню

 .navigation-item-content-icon -- иконка (слева и справа)

 .navigation-item-submenu -- класс для каждого раскрывающегося списка в меню
 !!! как работать при открытии и скрытии -- описано около него !!!

 .navigation-item-submenu-title -- тайтл на этом меню

 .navigation-item-submenu-button -- элемент подменю

 .navigation-item-submenu-button-active -- активное состояние

  --------

  Структура:

  .navigation
    .navigation-item
      .navigation-item-content
        .navigation-item-content-icon   (иконка)
        .navigation-item-content-label    (тайтл)
        .navigation-item-content-icon   (галка вниз)
      .navigation-item-submenu
        .navigation-tem-submenu-title
        .navigation-tem-submenu-button
        .navigation-tem-submenu-button
        ...
    .navigation-item
      .navigation-item-content
        .navigation-item-content-icon
        .navigation-item-content-label
        .navigation-item-content-icon
      .navigation-item-submenu
        .navigation-tem-submenu-title
        .navigation-tem-submenu-button
        .navigation-tem-submenu-button
        ...
    ...

  --------

    Уже реализовано в библиотеке react-ui-core

 */

.navigation {
  background: #ffffff;
  color: dt.$general-80;
  display: grid;
  position: relative;
  overflow: hidden;
  gap: 4px;
  width: 300px;

  border: 1px solid dt.$general-40;
  border-radius: 6px;

  font-family: dt.$typo-font-p-medium-family;
  font-style: dt.$typo-font-p-medium-style;
  font-weight: dt.$typo-font-p-medium-weight;

  .navigation-item {
    max-width: 100%;
    overflow: hidden;
    position: relative;
    display: block;
    box-sizing: border-box;
    background: #ffffff;
    flex: none;
    order: 0;
    user-select: none;
    font-size: 16px;
    line-height: 24px;

    .navigation-item-content {
      display: grid;
      grid-template-columns: 24px 1fr 24px;
      flex-direction: row;
      align-items: center;
      gap: 10px;
      padding: 8px 16px;
      cursor: pointer;

      &:hover,
      &:focus {
        color: dt.$primary-90;

        .navigation-item-content-icon {
          color: dt.$primary-90;

          & *:nth-child(n) {
            color: dt.$primary-90;
          }
        }
      }

      .navigation-item-content-label {
        overflow: hidden;
        display: inline-block;
        text-overflow: ellipsis;
      }

      .navigation-item-content-icon {
        transition: rotate 0.2s ease-in-out;
        font-size: 24px;
        height: fit-content;
        display: grid;
        place-items: center;
        color: dt.$general-80;

        & *:nth-child(n) {
          color: dt.$general-80;
        }
      }
    }

    .navigation-item-content-without-first-icon {
      @extend .navigation-item-content;
      grid-template-columns: 1fr 24px;

      & .navigation-item-content-icon:first-child {
        display: none;
      }
    }

    .navigation-item-content-active {
      color: dt.$primary-90;

      .navigation-item-content-icon {
        color: dt.$primary-90;

        & *:nth-child(n) {
          color: dt.$primary-90;
        }
      }

      & .navigation-item-content-icon:last-child {
        color: dt.$general-80;

        & *:nth-child(n) {
          color: dt.$general-80;
        }
      }
    }

    // Это контент для подменю (открытая вкладка).
    // Открыть / скрыть можно лишь указав ему height и display в inline стилях
    // Это сделано для анимации.

    // height: 0px; display: none; -- скрыт
    // height: <ваше значение>; display: block; -- открыт

    // не забудьте дождаться анимации, и потом устанавливать display: none;
    // а то анимации не будет

    // минус такого подхода в том, что придется получать высоту этого подменю
    // и работать с inline стилями

    // кто придумает способ лучше -- вперед ;)
    .navigation-item-submenu {
      transition: height 150ms ease;
      overflow: hidden;
      box-sizing: border-box;
      position: relative;
      display: block;
      width: 100%;
      height: 0px;

      .navigation-item-submenu-title {
        padding: 8px 12px 8px 16px;
        background: dt.$general-30;
        font-size: 16px;
        line-height: 24px;

        color: dt.$general-60;

        max-width: 100%;
        overflow: hidden;
        text-overflow: ellipsis;
        display: block;
      }

      .navigation-item-submenu-button {
        box-sizing: border-box;
        padding: 8px 12px 8px 40px;
        gap: 10px;
        cursor: pointer;

        height: 40px;

        background: dt.$general-30;
        color: dt.$general-80;

        max-width: 100%;
        overflow: hidden;
        text-overflow: ellipsis;
        display: block;

        &:hover,
        &:focus {
          background: dt.$primary-40;
          color: dt.$primary-90;
        }
      }

      .navigation-item-submenu-button-active {
        background: dt.$general-40;
        color: dt.$general-90;
      }
    }
  }

  .navigation-item-disabled {
    @extend .navigation-item;

    color: dt.$general-50;
    cursor: not-allowed;

    .navigation-item-content {
      pointer-events: none;
    }

    .navigation-item-submenu {
      pointer-events: none;
    }

    .navigation-item-content-icon {
      color: dt.$general-50 !important;

      & *:nth-child(n) {
        color: dt.$general-50 !important;
      }
    }

    &:hover {
      color: dt.$general-50;
    }
  }

  .navigation-item-content-open {
    & .navigation-item-content-icon:last-child {
      rotate: 180deg;
    }
  }
}

@keyframes hide-item-submenu {
  0%,
  99% {
    display: block;
  }
  100% {
    display: none;
  }
}

.navigation-horizontal {
  @extend .navigation;
  display: flex;
  width: fit-content;
  overflow: visible;
  gap: 15px;
  border: 0px;

  .navigation-item {
    width: fit-content;

    overflow: visible;
    //position: static;

    .navigation-item-content {
      display: flex;
      padding: 8px 16px;

      .navigation-item-content-label {
        min-width: 20px;
        max-width: 250px;
        overflow: hidden;
        text-overflow: ellipsis;
      }

      &:focus {
        @extend .navigation-item-content-open;
      }
    }

    // Стрелка некорректно себя ведёт при @extend (на hover тригерился transtition, на -active всегда была в одном положении)
    // Поэтому стили для классов прописаны так
    .navigation-item-content-open,
    .navigation-item-content:hover,
    .navigation-item-content-active {
      margin-bottom: -2px;
      border-bottom: 2px solid dt.$primary-90;
      color: dt.$primary-90;
      .navigation-item-content-icon:first-child {
        color: dt.$primary-90;
        & * {
          color: dt.$primary-90;
        }
      }
    }

    .navigation-item-content:hover {
      .navigation-item-content-icon:last-child {
        & * {
          color: dt.$primary-90;
        }
      }
    }

    .navigation-item-submenu {
      position: absolute;
      margin-top: 5px;
      left: 0px;

      .navigation-item-submenu-title {
        background-color: #fff;
        color: dt.$general-60;
      }

      .navigation-item-submenu-button {
        background-color: white;
        color: dt.$general-80;
      }

      .navigation-item-submenu-button-active {
        background: dt.$general-30;
        color: dt.$general-90;
      }
    }
  }
}
